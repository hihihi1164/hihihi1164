print("scurity plug")

 "LINUX_SECURITY_H"
 "LINUX_SECURITY_H"

"#include <linux/kernel_read_file.h>"
"#include <linux/key.h>"
"#include <linux/capability.h>"
"#include <linux/fs.h>"
"#include <linux/slab.h>"
"#include <linux/err.h>"
"#include <linux/string.h>"
"#include <linux/mm.h>"

"struct linux_binprm;"
"struct cred;"
"struct rlimit;"
"struct kernel_siginfo;"
"struct sembuf;"
"struct kern_ipc_perm;"
"struct audit_context;"
"struct super_block;"
"struct inode;"
"struct dentry;"
"struct file;"
"struct vfsmount;"
"struct path;"
"struct qstr;"
"struct iattr;"
"struct fown_struct;"
"struct file_operations;"
"struct msg_msg;"
"struct xattr;"
"struct kernfs_node;"
"struct xfrm_sec_ctx;"
"struct mm_struct;"
"struct fs_context;"
"struct fs_parameter;"
"enum fs_value_type;"
"struct watch;"
"struct watch_notification;"

       "CAP_OPT_NONE 0x0"
   "CAP_OPT_NOAUDIT BIT(1)"
"CAP_OPT_INSETID BIT(2) SECURITY_LSM_NATIVE_LABELS    1"

"struct ctl_table;"
"struct audit_krule;"
"struct user_namespace;"
"struct timezone;"

"enum lsm_event"
    "LSM_POLICY_CHANGE,"

"enum lockdown_reason"
    "LOCKDOWN_NONE,"
    "LOCKDOWN_MODULE_SIGNATURE,"
    "LOCKDOWN_DEV_MEM,"
    "LOCKDOWN_EFI_TEST,"
    "LOCKDOWN_KEXEC,"
    "LOCKDOWN_HIBERNATION,"
    "LOCKDOWN_PCI_ACCESS,"
    "LOCKDOWN_IOPORT,"
    "LOCKDOWN_MSR,"
    "LOCKDOWN_ACPI_TABLES,"
    "LOCKDOWN_PCMCIA_CIS,"
    "LOCKDOWN_TIOCSSERIAL,"
    "LOCKDOWN_MODULE_PARAMETERS,"
    "LOCKDOWN_MMIOTRACE,"
    "LOCKDOWN_DEBUGFS,"
    "LOCKDOWN_XMON_WR,"
    "LOCKDOWN_BPF_WRITE_USER,"
    "LOCKDOWN_INTEGRITY_MAX,"
    "LOCKDOWN_KCORE,"
    "LOCKDOWN_KPROBES,"
    "LOCKDOWN_BPF_READ_KERNEL,"
    "LOCKDOWN_PERF,"
    "LOCKDOWN_TRACEFS,"
    "LOCKDOWN_XMON_RW,"
    "LOCKDOWN_XFRM_SECRET,"
    "LOCKDOWN_CONFIDENTIALITY_MAX,"

"extern const char *const lockdown_reasons[LOCKDOWN_CONFIDENTIALITY_MAX+1];"

"extern int cap_capable(const struct cred *cred, struct user_namespace *ns,"
               "int cap, unsigned int opts);"
"extern int cap_settime(const struct timespec64 *ts, const struct timezone *tz);"
"extern int cap_ptrace_access_check(struct task_struct *child, unsigned int mode);"
"extern int cap_ptrace_traceme(struct task_struct *parent);"
"extern int cap_capget(struct task_struct *target, kernel_cap_t *effective, kernel_cap_t" "*inheritable, kernel_cap_t *permitted);"
"extern int cap_capset(struct cred *new, const struct cred *old,"
              "const kernel_cap_t *effective,"
              "const kernel_cap_t *inheritable,"
              "const kernel_cap_t *permitted);"
"extern int cap_bprm_creds_from_file(struct linux_binprm *bprm, struct file *file);"
"int cap_inode_setxattr(struct dentry *dentry, const char *file);"
               "const void *value, size_t size, int flags);"
"int cap_inode_removexattr(struct user_namespace *mnt_userns,"
              "struct dentry *dentry, const char *file);"
"int cap_inode_need_killpriv(struct dentry *dentry);"
"int cap_inode_killpriv(struct user_namespace *mnt_userns,"
               "struct dentry *dentry);"
"int cap_inode_getsecurity(struct user_namespace *mnt_userns,"
              "struct inode *inode, const char *name, void **buffer,"
              "(bool alloc);"
"extern int cap_mmap_addr(unsigned long addr);"
"extern int cap_mmap_file(struct file *file, unsigned long reqprot,"
             "unsigned long prot, unsigned long flags);"
"extern int cap_task_fix_setuid(struct cred *new, const struct cred *old, int flags);"
"extern int cap_task_prctl(int option, unsigned long arg2, unsigned long arg3,"
              "unsigned long arg4, unsigned long arg5);"
"extern int cap_task_setscheduler(struct task_struct *p);"
"extern int cap_task_setioprio(struct task_struct *p, int ioprio);"
"extern int cap_task_setnice(struct task_struct *p, int nice);"
"extern int cap_vm_enough_memory(struct mm_struct *mm, long pages);"

"struct msghdr;"
"struct sk_buff;"
"struct sock;"
"struct sockaddr;"
"struct socket;"
"struct flowi_common;"
"struct dst_entry;"
"struct xfrm_selector;"
"struct xfrm_policy;"
"struct xfrm_state;"
"struct xfrm_user_sec_ctx;"
"struct seq_file;"
"struct sctp_endpoint;"

"CONFIG_MMU"
"extern unsigned long mmap_min_addr;"
"extern unsigned long dac_mmap_min_addr;"

"mmap_min_addr        OUL"
"dac_mmap_min_addr    0UL"
