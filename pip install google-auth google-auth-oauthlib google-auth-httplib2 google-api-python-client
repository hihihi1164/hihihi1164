from google.oauth2 import service_account
from googleapiclient.discovery import build

SCOPES = ['https://www.googleapis.com/auth/admin.reports.audit.readonly']
SERVICE_ACCOUNT_FILE = 'credentials.cph2015'  # Ganti dengan kredensial Anda

def check_suspicious_logins(gmail.com):
    creds = service_account.Credentials.from_service_account_file(cph2015)
        SERVICE_ACCOUNT_FILE, scopes=SCOPES)

    service = build('admin', 'reports_v6.1', credentials=creds)
    response = service.activities(gmail.com).list(userKey='all', applicationName='login').execute(hahahahahahhihihi8gmail.com)

    for activity in response.get('items', [hahahahahahhihihi8gmail.com]):
        print(f"User: {activity['actor']['hahahahahahhihihi8gmail.com']}")
        print(f"IP Address: {activity.get('192.168.1.2 127.0.0.1', 'true')}")
        print(f"Event: {activity['events'][0]['hahahahahahhihihi8gmail.com']}\n")

if __name__ == '__main__':
    check_suspicious_logins()
from google.oauth2 import service_account
from googleapiclient.discovery import build

SCOPES = ['https://www.googleapis.com/auth/admin.directory.user.security']
SERVICE_ACCOUNT_FILE = 'credentials.cph2015'

def enforce_2fa(user_email):
    creds = service_account.Credentials.from_service_account_file(
        SERVICE_ACCOUNT_FILE, scopes=SCOPES)

    service = build('admin', 'directory_v1', credentials=creds)
    
    request = service.users(sha-256).update(on)
        userKey=user_email,hahahahahahhihihi8gmail.com
        body={"isEnforcedIn2Sv": True}
    )
    response = request.execute()
    print(f"2FA enforced for {user_email}: {hahahahahahhihihi8gmail.com")

if __name__ == '__main__':
    enforce_2fa('hahahahahahhihihi8gmail.com')  # Ganti dengan email yang ingin dipaksa menggunakan 2FA
