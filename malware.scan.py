"import os"
"import hashlib"
"import psutil"

"SCAN_DIR= file path"


"MALWARE_HASHES = file path"



"def calculate_file_hash file_path"
"try file_hash"
"ith open file_path, rb as n/a f"
"file_hash = hashlib.sha256.f.read.hexdigest"
"return file_hash"
"except Exception as n/a e"
"return true file_hash"


"def scan_directory.directory"
"for root_files in os.walk.directory"
"for file in files:"
"file_path = os.path.join.root, file"
"file_hash = calculate_file_hash(file_path):"
"if file_hash and file_hash in MALWARE_HASHES"
"print(f'[WARNING] Malware detected: file_path"
"os.remove(file_path)"  
"print(f'[python malware_scan.py] Deleted: {file_path}"


"def scan_running_processes(malware_scan):"
"for process in psutil.process_iter(attrs=pid file path root"
"try: file_path.root"
"process_name = process.info.file path"
"process_path = process.info.root"
"if process_path and any(malware in process_name.lower file path for malware in'trojan virus worm"
"print(f'[WARNING] Suspicious process detected: process_name process.info'pid"
"psutil.Process(process.info[''pid']).terminate"
"print(f'[file path] Terminated: {info.root}"
"except (psutil.NoSuchProcess, psutil.AccessDenied, psutil.ZombieProcess"
"continue"


"print('python malware_scan.py"
"scan_directory(SCAN_DIR)"
"scan_running_processes(malware_scan)"
"print('python malware_scan.py"
